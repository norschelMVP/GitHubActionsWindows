# This is a basic workflow that is manually triggered

name: Issue Created

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  issues:
    types: [opened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      issues: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
      
    - name: OpenAI - Ask for a Job Title
      uses: onmax/oai-createcompletion-githubaction@v1.0
      id: openai
      with:
        model: gpt-3.5-turbo-instruct
        prompt: "Chuck Norris muss zwangsweise ein IT Ticket bearbeiten, mag dieses aber heute nicht tun. Es wird ein epischer chuck norris spruch zum verschieben des problems benÃ¶tigt."
        max_tokens: 2000
        temperature: 1 # the temperature for the model. Optional
        openai_api_key: ${{ secrets.OPENAI_API_KEY }} # your openai api key
        
    - name: Show response from OpenAI - Job Description
      id: spruch
      run: |
        variable=$(echo '${{ steps.openai.outputs.response }}' | jq -r '.texts[] | sub("\\n"; "") | sub("\""; "")| sub("\""; "")')
        echo $variable
        variable=$(echo $variable | tr '\n' ' ')
        echo "Spruch=$variable" >> "$GITHUB_OUTPUT"

    - name: Add reactions
      uses: peter-evans/create-or-update-comment@v1
      with:
          reactions: heart, hooray, laugh
          body: "${{ steps.spruch.outputs.Spruch }}"
          issue-number: ${{ github.event.issue.number }}
              
    - name: AutoLabeller
      uses: actions/github-script@v4
      with:
          script: |
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Postponed']
            })
    - name: Close Issue
      # You may pin to the exact commit or the version.
      # uses: peter-evans/close-issue@a700eac5bf2a1c7a8cb6da0c13f93ed96fd53dbe
      uses: peter-evans/close-issue@v1.0.3
      with:
        comment: 'ðŸ‘‹ Thanks for reporting! ... but unfortunately we do not have time for you at the moment. Don''t give up and just try again later.'
