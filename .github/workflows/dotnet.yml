name: .NET

env:
 majorVersion: 2
 minorVersion: 0

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: windows-latest
    needs: [test]
    
    steps:
      - run: echo "deployment"
  
  test:
    strategy:
      matrix: 
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: [build]
    env:
      myVariable: "Basta 2021"
    steps:
      - run: echo "hello world ${{ env.myVariable }}"
  
  build:
    env:
      solutionpath: .\WinNetCoreApp\

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x 
    - name: Restore dependencies
      run: dotnet restore ${{ env.solutionpath }}
      
    - name: AssemblyVersion+AssemblyFileVersion - Modify version number
      uses: mingjun97/file-regex-replace@v1
      env:
           version-number: ${{ env.majorVersion }}.${{ env.minorVersion }}.${{ github.run_number }}
      with:
        regex: '[0-9]+(\.([0-9]+|\*)){1,3}'
        replacement: '${{ env.version-number}}'
        flags: "gi"                  # Optional, defaults to "g"
        include: 'WinNetCoreApp.csproj'    # Optional, defaults to ".*"
        exclude: '.^'               # Optional, defaults to '.^'
        encoding: 'utf8'            # Optional, defaults to 'utf8'
        path: '.'                   # Optional, defaults to '.'
      
    - name: Build
      run: dotnet build  ${{ env.solutionpath }} --no-restore
    - name: Test
      run: dotnet test ${{ env.solutionpath }} --no-build --verbosity normal
    - name: Upload dotnet results
      uses: actions/upload-artifact@v2
      with:
        name: dotnet
        path: '.\WinNetCoreApp\WinNetCoreApp\bin\Debug'
      # Use always() to always run this step to publish test results when there are test failures
      #if: ${{ always() }}
